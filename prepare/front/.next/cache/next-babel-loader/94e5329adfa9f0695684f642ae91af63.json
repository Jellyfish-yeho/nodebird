{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\code\\\\JeroCho\\\\react-nodebird\\\\prepare\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Avatar, Button, Card, Popover } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { useSelector } from \"react-redux\";\nimport PostImages from \"./PostImages\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var _post$Images$;\n  var post = _ref.post;\n  var _useState = useState(),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  console.log(\"id\", id);\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    cover: ((_post$Images$ = post.Images[0]) === null || _post$Images$ === void 0 ? void 0 : _post$Images$.src) && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 39\n      }\n    }),\n    actions: [\n    //배열 안의 jsx에는 key가 필요\n    __jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        type: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }))],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })));\n};\n_s(PostCard, \"4xdvvvIsWjGIa9zbjrPQRXM/WvU=\", false, function () {\n  return [useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  //object는 shape를 사용하여 구체적으로 명시하자.\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useState","PropTypes","Avatar","Button","Card","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","liked","setLiked","id","state","user","me","console","log","marginBottom","Images","src","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["C:/Users/pc/Desktop/code/JeroCho/react-nodebird/prepare/front/components/PostCard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Button, Card, Popover } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport PostImages from \"./PostImages\";\r\n\r\nconst PostCard = ({ post }) => {\r\n    const [liked, setLiked ] = useState()\r\n  const id = useSelector((state) => state.user.me?.id);\r\n  console.log(\"id\", id)\r\n  return (\r\n    <div style={{marginBottom:20}}>\r\n      <Card\r\n        cover={post.Images[0]?.src && <PostImages images={post.Images} />}\r\n        actions={[\r\n          //배열 안의 jsx에는 key가 필요\r\n          <RetweetOutlined key=\"retweet\" />,\r\n          <HeartOutlined key=\"heart\" />,\r\n          <MessageOutlined key=\"comment\" />,\r\n          <Popover\r\n            key=\"more\"\r\n            content={\r\n              <Button.Group>\r\n                {id && post.User.id === id ? (\r\n                  <>\r\n                    <Button type=\"primary\">수정</Button>\r\n                    <Button type=\"danger\">삭제</Button>\r\n                  </>\r\n                ) : (\r\n                  <Button>신고</Button>\r\n                )}\r\n              </Button.Group>\r\n            }\r\n          >\r\n            <EllipsisOutlined />\r\n          </Popover>,\r\n        ]}\r\n      >\r\n        <Card.Meta\r\n          avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n          title={post.User.nickname}\r\n          description={post.content}\r\n        />\r\n      </Card>\r\n      {/* <CommentForm />\r\n      <Comments /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  //object는 shape를 사용하여 구체적으로 명시하자.\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createdAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}